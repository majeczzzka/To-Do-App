{"version":3,"sources":["components/TodoListItem.js","components/TodoList.js","components/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListItem","_ref","item","onDeleteItem","subItem","subSubItem","onAddSubItem","onDeleteSubItem","onAddSubSubItem","onDeleteSubSubItem","onToggleDone","onToggleItemVisibility","index","_useState","useState","_useState2","_slicedToArray","isDone","setIsDone","_useState3","_useState4","isSubDone","setIsSubDone","_useState5","_useState6","isSubSubDone","setIsSubSubDone","_useState7","_useState8","isVisible","setIsVisible","_useState9","_useState10","isSubVisible","setIsSubVisible","toggleDone","id","document","querySelectorAll","forEach","content","addEventListener","updatedContent","innerText","console","log","toggleVisibility","addSubItem","subItemTitle","prompt","React","createElement","Draggable","draggableId","toString","provided","Object","assign","className","concat","ref","innerRef","draggableProps","dragHandleProps","style","display","alignItems","type","checked","onChange","contentEditable","onKeyDown","e","key","preventDefault","target","blur","maxWidth","textDecoration","title","subItems","length","onClick","role","aria-label","map","subItemId","prevDone","_objectSpread","_defineProperty","subSubItems","prevState","subSubItemTitle","addSubSubItem","width","subSubItemId","TodoList","list","onDeleteList","onAddItem","onToggleSubItemVisibility","newItemTitle","setNewItemTitle","addItem","itemTitle","trim","alert","handleAddItemWithEnter","Droppable","droppableId","droppableProps","items","itemIndex","listId","itemId","placeholder","value","onKeyPress","AddTodo","onAddList","setTitle","setList","newSubItemTitle","setNewSubItemTitle","newSubSubItemTitle","setNewSubSubItemTitle","handleAddListWithStructure","listWithStructure","updatedList","_toConsumableArray","push","Date","getTime","handleAddSubItem","subIndex","handleAddSubSubItem","error","exception","indexOf","apply","arguments","App","lists","setLists","newList","DragDropContext","onDragEnd","result","destination","source","updatedLists","_updatedLists$splice","splice","removed","sourceList","find","destList","sourceIndex","destIndex","updatedItems","_updatedItems$splice","movedItem","sourceItems","destItems","_sourceItems$splice","direction","filter","deleteList","addListItem","deleteListItem","deleteSubItem","deleteSubSubItem","toggleSubVisibility","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.46416db4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst TodoListItem = ({\n  item,\n  subItem,\n  subSubItem,\n  onDeleteItem,\n  onAddSubItem,\n  onDeleteSubItem,\n  onAddSubSubItem,\n  onDeleteSubSubItem,\n  onToggleDone,\n  onToggleItemVisibility,\n  index,\n}) => {\n  const [isDone, setIsDone] = useState(false);\n  const [isSubDone, setIsSubDone] = useState(false);\n  const [isSubSubDone, setIsSubSubDone] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const [isSubVisible, setIsSubVisible] = useState(true);\n\n  const toggleDone = () => {\n    setIsDone(!isDone);\n    onToggleDone(item.id);\n  };\n\n  const toggleSubDone = (subItemId) => {\n    setIsSubDone((prevDone) => ({\n      ...prevDone,\n      [subItemId]: !prevDone[subItemId],\n    }));\n  };\n\n  const toggleSubSubDone = (subSubItemId) => {\n    setIsSubSubDone((prevDone) => ({\n      ...prevDone,\n      [subSubItemId]: !prevDone[subSubItemId],\n    }));\n  };\n\n  const editableContents = document.querySelectorAll(\".item-content\");\n\n  // Add input event listeners to each editable content\n  editableContents.forEach((content) => {\n    content.addEventListener(\"input\", () => {\n      // Save the edited content to your data structure or perform other actions\n      const updatedContent = content.innerText;\n      console.log(\"Updated Content:\", updatedContent);\n\n      // Optionally, update your data or make an API call to save changes\n      // Example: Update your data array or send the data to the server\n    });\n  });\n\n  const toggleVisibility = () => {\n    setIsVisible(!isVisible);\n    onToggleItemVisibility(item.id, !isVisible);\n  };\n\n  const toggleSubVisibility = (subItemId) => {\n    setIsSubVisible((prevState) => ({\n      ...prevState,\n      [subItemId]: !prevState[subItemId],\n    }));\n  };\n\n  const addSubItem = () => {\n    const subItemTitle = prompt(\"Enter the title of the sub-item:\");\n    if (subItemTitle) {\n      onAddSubItem(subItemTitle);\n    }\n  };\n\n  const addSubSubItem = (subItemId) => {\n    console.log(\"Before prompt\");\n    const subSubItemTitle = prompt(\"Enter the title of the sub-sub-item:\");\n    console.log(\"After prompt, subSubItemTitle:\", subItemId, subSubItemTitle);\n    if (subSubItemTitle !== null) {\n      onAddSubSubItem(subItemId, subSubItemTitle);\n    }\n  };\n\n  return (\n    <Draggable draggableId={item.id.toString()} index={index}>\n      {(provided) => (\n        // Only render if it's not hidden\n        <li\n          className={`todo-list-item ${isDone ? \"done\" : \"\"}`}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"item-header\">\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div className=\"checkbox\">\n                <input type=\"checkbox\" checked={isDone} onChange={toggleDone} />\n              </div>\n              <div className=\"content-container\">\n                <span\n                  contentEditable=\"true\"\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      e.target.blur();\n                    }\n                  }}\n                  style={{\n                    maxWidth: \"100%\",\n                    display: \"inline-block\",\n                    textDecoration: isDone ? \"line-through\" : \"none\",\n                  }}\n                >\n                  {item.title}\n                </span>\n              </div>\n              {item.subItems.length > 0 && (\n                <button\n                  className=\"visibility-button\"\n                  onClick={toggleVisibility}\n                >\n                  {isVisible ? \"▲\" : \"▼\"}\n                </button>\n              )}\n              <button className=\"add-sub-item-button\" onClick={addSubItem}>\n                <span role=\"img\" aria-label=\"Add\">\n                  &#x2795;\n                </span>\n              </button>\n            </div>\n            <button className=\"delete-button\" onClick={onDeleteItem}>\n              <span role=\"img\" aria-label=\"Delete\">\n                &times;\n              </span>\n            </button>\n          </div>\n          {item.subItems.length > 0 && isVisible && (\n            <ul className=\"sub-items\">\n              {item.subItems.map((subItem) => (\n                <li key={subItem.id}>\n                  <div className=\"checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      checked={isDone || isSubDone[subItem.id] || false}\n                      onChange={() => toggleSubDone(subItem.id)}\n                    />\n                  </div>\n                  <div className=\"content-container2\">\n                    <span\n                      contentEditable=\"true\"\n                      onKeyDown={(e) => {\n                        if (e.key === \"Enter\") {\n                          e.preventDefault();\n                          e.target.blur();\n                        }\n                      }}\n                      style={{\n                        maxWidth: \"100%\",\n                        display: \"inline-block\",\n                        textDecoration:\n                          isDone || isSubDone[subItem.id]\n                            ? \"line-through\"\n                            : \"none\",\n                      }}\n                    >\n                      {subItem.title}\n                    </span>\n                  </div>\n                  {subItem.subSubItems.length > 0 && (\n                    <button\n                      className=\"visibility-button\"\n                      onClick={() => toggleSubVisibility(subItem.id)}\n                    >\n                      {!isSubVisible[subItem.id] ? \"▲\" : \"▼\"}\n                    </button>\n                  )}\n                  <button\n                    className=\"add-sub-sub-item-button\"\n                    onClick={() => addSubSubItem(subItem.id)}\n                  >\n                    <span role=\"img\" aria-label=\"Add\">\n                      &#x2795;\n                    </span>\n                  </button>\n                  <button\n                    className=\"delete-button\"\n                    onClick={() => onDeleteSubItem(subItem.id)}\n                  >\n                    &times;\n                  </button>\n\n                  {subItem.subSubItems.length > 0 &&\n                    !isSubVisible[subItem.id] && (\n                      <ul className=\"sub-sub-items\">\n                        {subItem.subSubItems.map((subSubItem) => (\n                          <li\n                            key={subSubItem.id}\n                            style={{ width: \"100%\", maxWidth: \"100%\" }}\n                          >\n                            <div className=\"checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                checked={\n                                  isDone ||\n                                  isSubDone[subItem.id] ||\n                                  isSubSubDone[subSubItem.id] ||\n                                  false\n                                }\n                                onChange={() => toggleSubSubDone(subSubItem.id)}\n                              />\n                            </div>\n                            <div className=\"content-container3\">\n                              <span\n                                contentEditable=\"true\"\n                                onKeyDown={(e) => {\n                                  if (e.key === \"Enter\") {\n                                    e.preventDefault();\n                                    e.target.blur();\n                                  }\n                                }}\n                                style={{\n                                  maxWidth: \"100%\",\n                                  display: \"inline-block\",\n                                  textDecoration:\n                                    isDone ||\n                                    isSubDone[subItem.id] ||\n                                    isSubSubDone[subSubItem.id]\n                                      ? \"line-through\"\n                                      : \"none\",\n                                }}\n                              >\n                                {subSubItem.title}\n                              </span>\n                            </div>\n                            <button\n                              className=\"delete-button\"\n                              onClick={() => {\n                                console.log(\n                                  \"Button Clicked - item.id:\",\n                                  item.id,\n                                  \"subItem.id:\",\n                                  subItem.id,\n                                  \"subSubItem.id:\",\n                                  subSubItem.id\n                                );\n                                onDeleteSubSubItem(\n                                  item.id,\n                                  subItem.id,\n                                  subSubItem.id\n                                );\n                              }}\n                            >\n                              &times;\n                            </button>\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      )}\n    </Draggable>\n  );\n};\n\nexport default TodoListItem;\n","import React, { useState } from \"react\";\nimport TodoListItem from \"./TodoListItem\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\n\nconst TodoList = ({\n  list,\n  onDeleteList,\n  onAddItem,\n  onDeleteItem,\n  onAddSubItem,\n  onDeleteSubItem,\n  onAddSubSubItem,\n  onDeleteSubSubItem,\n  onToggleDone,\n  onToggleItemVisibility,\n  onToggleSubItemVisibility,\n  index\n}) => {\n  const [newItemTitle, setNewItemTitle] = useState(\"\");\n\n  const addItem = (itemTitle) => {\n    if (itemTitle.trim() === \"\") {\n      alert(\"Please input a title for the item.\");\n    } else {\n      onAddItem(itemTitle);\n      setNewItemTitle(\"\"); // Clear the input field\n    }\n  };\n\n  const handleAddItemWithEnter = (e) => {\n    if (e.key === \"Enter\" || e.key === \"Return\") {\n      addItem(newItemTitle);\n    }\n  };\n\n\n  return (\n    <Draggable draggableId={list.id.toString()} index={index}>\n      {(provided) => (\n        <div\n          className=\"todo-list\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          \n        >\n          <div className=\"list-header\">\n            <div className=\"content-container0\">\n            <span {...provided.dragHandleProps} contentEditable=\"true\"onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault(); \n                  \n                      e.target.blur();\n                    }\n                  }}\n                  style={{ maxWidth: '100%', display: 'inline-block'}}>{list.title}</span></div>\n            <button onClick={onDeleteList}>&times;</button>\n          </div>\n          <Droppable droppableId={list.id.toString()} type=\"ITEM\">\n            {(provided) => (\n              <ul className=\"list-items \" {...provided.droppableProps} ref={provided.innerRef}>\n                {list.items.map((item, itemIndex) => (\n                  \n                  <TodoListItem \n                    key={item.id}\n                    item={item}\n                    listId={list.id}\n                    \n                    onDeleteItem={() => onDeleteItem(item.id)}\n                    onAddSubItem={(subItemTitle) =>\n                      onAddSubItem(item.id, subItemTitle)\n                    }\n                    onDeleteSubItem={(subItemId) =>\n                      onDeleteSubItem(item.id, subItemId)\n                    }\n                    onAddSubSubItem={(subItemId, subSubItemTitle) =>\n                      onAddSubSubItem(item.id, subItemId, subSubItemTitle)\n                    }\n          \n                    onDeleteSubSubItem={(itemId, subItemId, subSubItemId) =>\n                      onDeleteSubSubItem(itemId, subItemId, subSubItemId)\n                    }\n                    onToggleDone={() => onToggleDone(list.id, item.id)}\n                    index={itemIndex}\n\n                    onToggleItemVisibility={(isVisible) =>\n                      onToggleItemVisibility(list.id, item.id, isVisible)\n                    }\n                    onToggleSubItemVisibility={(isSubVisible, subItem) =>\n                      onToggleSubItemVisibility(list.id, item.id, subItem.id, isSubVisible)}\n\n                  \n                  />\n                ))}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n          <div className=\"add-item\">\n            <input\n              type=\"text\"\n              placeholder=\"Add a new item\"\n              value={newItemTitle}\n              onChange={(e) => setNewItemTitle(e.target.value)}\n              onKeyPress={handleAddItemWithEnter}\n            />\n            <button onClick={() => addItem(newItemTitle)}>&#10004;</button>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\n\nconst AddTodo = ({ onAddList }) => {\n  const [title, setTitle] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [newSubItemTitle, setNewSubItemTitle] = useState(\"\");\n  const [newSubSubItemTitle, setNewSubSubItemTitle] = useState(\"\");\n\n  const handleAddSubItem = (index) => {\n    const updatedList = [...list];\n    updatedList[index].subItems.push({ id: new Date().getTime(), title: newSubItemTitle, subSubItems: [] });\n    setList(updatedList);\n    setNewSubItemTitle(\"\");\n  };\n  \n\n  const handleAddSubSubItem = (index, subIndex) => {\n    console.log(\"Before adding subsubitem: \", list);\n    const updatedList = [...list];\n    updatedList[index].subItems[subIndex].subSubItems.push({ id: new Date().getTime(), title: newSubSubItemTitle });\n    setList(updatedList);\n    setNewSubSubItemTitle(\"\");\n    console.log(\"After adding subsubitem: \", updatedList);\n  };\n\n  const handleAddListWithStructure = () => {\n    if (title.trim() === \"\") {\n      alert(\"Please input a title for the list.\");\n    } else {\n      const listWithStructure = list.map((item) => ({\n        ...item,\n        subItems: item.subItems.map((subItem) => ({\n          ...subItem,\n          subSubItems: subItem.subSubItems || []\n        })),\n      }));\n      onAddList(title, listWithStructure);\n      setTitle(\"\");\n      setList([]);\n    }\n  };\n\n  const handleAddListWithEnter = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleAddListWithStructure();\n    }\n  };\n\n\n  return (\n    \n    <div className=\"add-todo\">\n      <input\n        type=\"text\"\n        placeholder=\"Add a new list\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        onKeyPress={handleAddListWithEnter}\n      />\n      <button onClick={handleAddListWithStructure}>Add List</button>\n      {list.map((item, index) => (\n        <div key={item.id}>\n          <input\n            type=\"text\"\n            placeholder=\"Add item\"\n            value={item.title}\n            onChange={(e) => {\n              const updatedList = [...list];\n              updatedList[index].title = e.target.value;\n              setList(updatedList);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Add sub-item\"\n            value={newSubItemTitle}\n            onChange={(e) => setNewSubItemTitle(e.target.value)}\n          />\n          <button onClick={() => handleAddSubItem(index)}>Add Sub-Item</button>\n          {item.subItems.map((subItem, subIndex) => (\n            <div key={subItem.id}>\n              <input\n                type=\"text\"\n                placeholder=\"Add sub-sub-item\"\n                value={newSubSubItemTitle}\n                onChange={(e) => setNewSubSubItemTitle(e.target.value)}\n              />\n              <button onClick={() => handleAddSubSubItem(index, subIndex)}>Add Sub-Sub-Item</button>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React, { useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport AddTodo from \"./components/AddTodo\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nfunction App() {\n  const [lists, setLists] = useState([]);\n\n  const addList = (title) => {\n    const newList = {\n      id: new Date().getTime(),\n      title,\n      items: [],\n    };\n\n    setLists([...lists, newList]);\n  };\n\n  const deleteList = (listId) => {\n    const updatedLists = lists.filter((list) => list.id !== listId);\n    setLists(updatedLists);\n  };\n\n  const toggleDone = (listId, itemId) => {\n    // Create a copy of the current state\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        // Create a copy of the items array\n        list.items = list.items.map((item) => {\n          if (item.id === itemId) {\n            // Toggle the \"isDone\" property\n            item.isDone = !item.isDone;\n          }\n          return item;\n        });\n      }\n      return list;\n    });  \n\n    // Update the state with the modified data\n    setLists(updatedLists);\n  };\n\n  const addListItem = (listId, itemTitle) => {\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items.push({\n          id: new Date().getTime(),\n          title: itemTitle,\n          subItems: [],\n          isVisible: true,\n        });\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n\n  const deleteListItem = (listId, itemId) => {\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items = list.items.filter((item) => item.id !== itemId);\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n\n  const addSubItem = (listId, itemId, subItemTitle) => {\n    console.log(\"Adding sub-item:\", listId, itemId, subItemTitle);\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items = list.items.map((item) => {\n          if (item.id === itemId) {\n            item.subItems.push({\n              id: new Date().getTime(),\n              title: subItemTitle,\n              subSubItems: [],\n              \n            });\n          }\n          return item;\n        });\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n\n  const deleteSubItem = (listId, itemId, subItemId) => {\n    console.log(\"Deleting sub-item:\", subItemId);\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items = list.items.map((item) => {\n          if (item.id === itemId) {\n            item.subItems = item.subItems.filter((subItem) => subItem.id !== subItemId);\n          }\n          return item;\n        });\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n\n  const addSubSubItem = (listId, itemId, subItemId, subSubItemTitle) => {\n    console.log(\"Adding sub-sub-item:\", listId, itemId, subItemId, subSubItemTitle);\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items = list.items.map((item) => {\n          if (item.id === itemId) {\n            item.subItems = item.subItems.map((subItem) => {\n              if (subItem.id === subItemId) {\n                subItem.subSubItems.push({\n                  id: new Date().getTime(),\n                  title: subSubItemTitle,\n                })\n              }\n              return subItem;\n            });\n          }\n          return item;\n        });\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n  \n  \n  const deleteSubSubItem = (listId, itemId, subItemId, subSubItemId) => {\n    console.log(\"Deleting sub-sub-item:\", listId, itemId, subItemId, subSubItemId);\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items = list.items.map((item) => {\n          if (item.id === itemId) {\n            item.subItems = item.subItems.map((subItem) => {\n              if (subItem.id === subItemId) {\n                subItem.subSubItems = subItem.subSubItems.filter(\n                  (subSubItem) => subSubItem.id !== subSubItemId\n                );\n              }\n              return subItem;\n            });\n          }\n          return item;\n        });\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n\n  const toggleVisibility = (listId, itemId, isVisible) => {\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items = list.items.map((item) => {\n          if (item.id === itemId) {\n            item.isVisible = isVisible; // Set the visibility flag\n          }\n          return item;\n        });\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n\n  const toggleSubVisibility = (listId, itemId, subItemId, isVisible) => {\n    const updatedLists = lists.map((list) => {\n      if (list.id === listId) {\n        list.items = list.items.map((item) => {\n          if (item.id === itemId) {\n            list.subItems = item.subItems.map((subItem) => {\n              if (subItem.id === subItemId) {\n                subItem.isVisible = isVisible; // Set the visibility flag\n          }\n          return subItem;\n        });\n      }\n          return item;\n      });\n      }\n      return list;\n    });\n    setLists(updatedLists);\n  };\n  \n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const { source, destination, type } = result;\n\n    if (type === \"COLUMN\") {\n      const updatedLists = [...lists];\n      const [removed] = updatedLists.splice(source.index, 1);\n      updatedLists.splice(destination.index, 0, removed);\n\n      setLists(updatedLists);\n    } else if (type === \"ITEM\") {\n      const sourceList = lists.find((list) => list.id.toString() === source.droppableId);\n      const destList = lists.find((list) => list.id.toString() === destination.droppableId);\n\n      const sourceIndex = source.index;\n      const destIndex = destination.index;\n\n      if (sourceList === destList) {\n        const updatedItems = [...sourceList.items];\n        const [movedItem] = updatedItems.splice(sourceIndex, 1);\n        updatedItems.splice(destIndex, 0, movedItem);\n\n        sourceList.items = updatedItems;\n        setLists([...lists]);\n      } else {\n        const sourceItems = [...sourceList.items];\n        const destItems = [...destList.items];\n\n        const [movedItem] = sourceItems.splice(sourceIndex, 1);\n        destItems.splice(destIndex, 0, movedItem);\n\n        sourceList.items = sourceItems;\n        destList.items = destItems;\n\n        setLists([...lists]);\n      }\n    }\n  };\n\n  console.log(\"Lists:\", lists);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"list-title\">\n        t h e &nbsp; T o - D o &nbsp; L i s t &nbsp; y o u &nbsp; w e r e &nbsp; l o o k i n g &nbsp; f o r. <span role=\"img\" aria-label=\"Star Emoji\">&#127775;</span>\n      </h1>\n      <AddTodo onAddList={addList} />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"all-columns\" type=\"COLUMN\" direction=\"horizontal\">\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.droppableProps} className=\"todo-list-container\">\n              {lists.map((list, index) => (\n                <TodoList\n                  key={list.id}\n                  list={list}\n                  onDeleteList={() => deleteList(list.id)}\n                  onAddItem={(itemTitle) => addListItem(list.id, itemTitle)}\n                  onDeleteItem={(itemId) => deleteListItem(list.id, itemId)}\n                  onAddSubItem={(itemId, subItemTitle) => addSubItem(list.id, itemId, subItemTitle)}\n                  onDeleteSubItem={(itemId, subItemId) => deleteSubItem(list.id, itemId, subItemId)}\n                  onAddSubSubItem={(itemId, subItemId, subSubItemTitle) =>\n                    addSubSubItem(list.id, itemId, subItemId, subSubItemTitle)\n                  }\n                  onDeleteSubSubItem={(itemId, subItemId, subSubItemId) => {console.log(\"broo:\", list.id, itemId, subItemId, subSubItemId);\n                    deleteSubSubItem(list.id, itemId, subItemId, subSubItemId)}\n                  }\n                  onToggleDone={(itemId) => toggleDone(list.id, itemId)}\n                  onToggleItemVisibility={(listId, itemId, isVisible) => toggleVisibility(listId, itemId, isVisible)}\n                  onToggleSubItemVisibility = {(listId, itemId, subItemId, isVisible) => toggleSubVisibility(listId, itemId, subItemId, isVisible)}\n\n                  index={index}\n                />\n              ))}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\n\nconsole.error = (function() {\n  var error = console.error\n\n  return function(exception) {\n      if ((exception + '').indexOf('Warning: A component is `contentEditable`') !== 0) {\n          error.apply(console, arguments)\n      }\n  }\n})()\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}